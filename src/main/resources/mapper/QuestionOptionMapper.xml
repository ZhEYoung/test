<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.mapper.QuestionOptionMapper">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.exam.entity.QuestionOption">
        <id column="option_id" property="optionId"/>
        <result column="question_id" property="questionId"/>
        <result column="content" property="content"/>
        <result column="is_correct" property="isCorrect"/>
    </resultMap>

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        option_id, question_id, content, is_correct
    </sql>

    <!-- 插入选项记录 -->
    <insert id="insert" parameterType="com.exam.entity.QuestionOption" useGeneratedKeys="true" keyProperty="optionId">
        INSERT INTO question_option (question_id, content, is_correct)
        VALUES (#{questionId}, #{content}, #{isCorrect})
    </insert>

    <!-- 根据ID删除选项 -->
    <delete id="deleteById">
        DELETE FROM question_option WHERE option_id = #{optionId}
    </delete>

    <!-- 更新选项信息 -->
    <update id="update" parameterType="com.exam.entity.QuestionOption">
        UPDATE question_option
        <set>
            <if test="questionId != null">question_id = #{questionId},</if>
            <if test="content != null">content = #{content},</if>
            <if test="isCorrect != null">is_correct = #{isCorrect},</if>
        </set>
        WHERE option_id = #{optionId}
    </update>

    <!-- 根据ID查询选项 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM question_option
        WHERE option_id = #{optionId}
    </select>

    <!-- 查询所有选项 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM question_option
        ORDER BY option_id DESC
    </select>

    <!-- 根据题目ID查询选项列表 -->
    <select id="selectByQuestionId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM question_option 
        WHERE question_id = #{questionId}
        ORDER BY option_id
    </select>

    <!-- 批量插入选项 -->
    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="options.optionId">
        INSERT INTO question_option (
            question_id, content, is_correct
        ) VALUES 
        <foreach collection="options" item="option" separator=",">
            (#{option.questionId}, #{option.content}, #{option.isCorrect})
        </foreach>
    </insert>

    <!-- 根据题目ID删除选项 -->
    <delete id="deleteByQuestionId">
        DELETE FROM question_option 
        WHERE question_id = #{questionId}
    </delete>

    <!-- 批量更新选项 -->
    <update id="batchUpdate">
        <foreach collection="options" item="option" separator=";">
            UPDATE question_option 
            <set>
                <if test="option.content != null">content = #{option.content},</if>
                <if test="option.isCorrect != null">is_correct = #{option.isCorrect},</if>
            </set>
            WHERE option_id = #{option.optionId}
        </foreach>
    </update>

    <!-- 根据题目ID统计选项数量 -->
    <select id="countByQuestionId" resultType="int">
        SELECT COUNT(1)
        FROM question_option
        WHERE question_id = #{questionId}
    </select>

    <!-- 根据题目ID统计正确选项数量 -->
    <select id="countCorrectOptions" resultType="int">
        SELECT COUNT(1)
        FROM question_option
        WHERE question_id = #{questionId}
        AND is_correct = 1
    </select>

    <!-- 检查选项是否存在 -->
    <select id="checkExists" resultType="boolean">
        SELECT EXISTS(
            SELECT 1 
            FROM question_option 
            WHERE option_id = #{optionId}
        )
    </select>

    <!-- 批量删除选项 -->
    <delete id="batchDelete">
        DELETE FROM question_option 
        WHERE option_id IN
        <foreach collection="optionIds" item="optionId" open="(" separator="," close=")">
            #{optionId}
        </foreach>
    </delete>

    <!-- 根据内容模糊查询选项 -->
    <select id="selectByContent" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM question_option
        WHERE content LIKE CONCAT('%', #{content}, '%')
        ORDER BY option_id DESC
    </select>
</mapper>
