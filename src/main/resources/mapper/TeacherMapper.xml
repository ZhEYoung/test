<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.mapper.TeacherMapper">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.exam.entity.Teacher">
        <id column="teacher_id" property="teacherId"/>
        <result column="user_id" property="userId"/>
        <result column="name" property="name"/>
        <result column="permission" property="permission"/>
        <result column="college_id" property="collegeId"/>
        <result column="other" property="other"/>
    </resultMap>

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        teacher_id, user_id, name, permission, college_id, other
    </sql>

    <!-- 插入教师记录 -->
    <insert id="insert" parameterType="com.exam.entity.Teacher" useGeneratedKeys="true" keyProperty="teacherId">
        INSERT INTO teacher (user_id, name, permission, college_id, other)
        VALUES (#{userId}, #{name}, #{permission}, #{collegeId}, #{other})
    </insert>

    <!-- 批量插入教师记录 -->
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO teacher (user_id, name, permission, college_id, other)
        VALUES 
        <foreach collection="teachers" item="teacher" separator=",">
            (#{teacher.userId}, #{teacher.name}, #{teacher.permission}, #{teacher.collegeId}, #{teacher.other})
        </foreach>
    </insert>

    <!-- 根据ID删除教师 -->
    <delete id="deleteById">
        DELETE FROM teacher WHERE teacher_id = #{teacherId}
    </delete>

    <!-- 批量删除教师 -->
    <delete id="batchDelete">
        DELETE FROM teacher 
        WHERE teacher_id IN
        <foreach collection="teacherIds" item="teacherId" open="(" separator="," close=")">
            #{teacherId}
        </foreach>
    </delete>

    <!-- 更新教师信息 -->
    <update id="updateById" parameterType="com.exam.entity.Teacher">
        UPDATE teacher
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="permission != null">permission = #{permission},</if>
            <if test="collegeId != null">college_id = #{collegeId},</if>
            <if test="other != null">other = #{other},</if>
        </set>
        WHERE teacher_id = #{teacherId}
    </update>

    <!-- 批量更新教师信息 -->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="teachers" item="teacher" separator=";">
            UPDATE teacher
            <set>
                <if test="teacher.userId != null">user_id = #{teacher.userId},</if>
                <if test="teacher.name != null">name = #{teacher.name},</if>
                <if test="teacher.permission != null">permission = #{teacher.permission},</if>
                <if test="teacher.collegeId != null">college_id = #{teacher.collegeId},</if>
                <if test="teacher.other != null">other = #{teacher.other},</if>
            </set>
            WHERE teacher_id = #{teacher.teacherId}
        </foreach>
    </update>

    <!-- 根据ID查询教师 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM teacher
        WHERE teacher_id = #{teacherId}
    </select>

    <!-- 查询所有教师 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM teacher
        ORDER BY teacher_id DESC
    </select>

    <!-- 分页查询教师列表 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM teacher
        ORDER BY teacher_id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 统计教师总数 -->
    <select id="selectCount" resultType="int">
        SELECT COUNT(1) FROM teacher
    </select>

    <!-- 根据条件查询教师 -->
    <select id="selectByCondition" parameterType="com.exam.entity.Teacher" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM teacher
        <where>
            <if test="userId != null">AND user_id = #{userId}</if>
            <if test="name != null">AND name LIKE CONCAT('%', #{name}, '%')</if>
            <if test="permission != null">AND permission = #{permission}</if>
            <if test="collegeId != null">AND college_id = #{collegeId}</if>
        </where>
        ORDER BY teacher_id DESC
    </select>

    <!-- 根据用户ID查询教师信息 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM teacher 
        WHERE user_id = #{userId}
        LIMIT 1
    </select>

    <!-- 根据学院ID查询教师列表 -->
    <select id="selectByCollegeId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM teacher 
        WHERE college_id = #{collegeId}
        ORDER BY teacher_id DESC
    </select>

    <!-- 根据教师姓名查询 -->
    <select id="selectByName" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM teacher 
        WHERE name LIKE CONCAT('%', #{name}, '%')
        ORDER BY teacher_id DESC
    </select>

    <!-- 根据权限等级查询教师列表 -->
    <select id="selectByPermission" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM teacher 
        WHERE permission = #{permission}
        ORDER BY teacher_id DESC
    </select>

    <!-- 更新教师备注信息 -->
    <update id="updateOther">
        UPDATE teacher 
        SET other = #{other} 
        WHERE teacher_id = #{teacherId}
    </update>

    <!-- 更新教师权限 -->
    <update id="updatePermission">
        UPDATE teacher 
        SET permission = #{permission} 
        WHERE teacher_id = #{teacherId}
    </update>

    <!-- 批量更新教师权限 -->
    <update id="batchUpdatePermission">
        UPDATE teacher 
        SET permission = #{permission}
        WHERE teacher_id IN
        <foreach collection="teacherIds" item="teacherId" open="(" separator="," close=")">
            #{teacherId}
        </foreach>
    </update>

    <!-- 统计学院教师数量 -->
    <select id="countByCollege" resultType="int">
        SELECT COUNT(1)
        FROM teacher
        WHERE college_id = #{collegeId}
    </select>

    <!-- 统计各权限等级教师数量 -->
    <select id="countByPermission" resultType="java.util.Map">
        SELECT 
            permission,
            COUNT(1) as count,
            CAST(COUNT(1) * 100.0 / SUM(COUNT(1)) OVER() AS DECIMAL(5,2)) as percentage
        FROM teacher
        GROUP BY permission
        ORDER BY permission
    </select>

    <!-- 查询教师考试统计信息 -->
    <select id="selectExamStats" resultType="java.util.Map">
        SELECT 
            COUNT(DISTINCT e.exam_id) as total_exams,
            COUNT(DISTINCT e.subject_id) as total_subjects,
            COUNT(DISTINCT ec.class_id) as total_classes,
            COUNT(DISTINCT es.student_id) as total_students
        FROM teacher t
        LEFT JOIN exam e ON t.teacher_id = e.teacher_id
        LEFT JOIN exam_class ec ON e.exam_id = ec.exam_id
        LEFT JOIN exam_student es ON e.exam_id = es.exam_id
        WHERE t.teacher_id = #{teacherId}
    </select>

    <!-- 查询教师发布的考试列表 -->
    <select id="selectTeacherExams" resultType="java.util.Map">
        SELECT 
            e.exam_id,
            e.exam_name,
            e.exam_type,
            e.exam_start_time,
            e.exam_end_time,
            e.exam_status,
            s.subject_name,
            COUNT(DISTINCT ec.class_id) as class_count,
            COUNT(DISTINCT es.student_id) as student_count,
            CAST(AVG(ss.score) AS DECIMAL(5,2)) as avg_score
        FROM exam e
        LEFT JOIN subject s ON e.subject_id = s.subject_id
        LEFT JOIN exam_class ec ON e.exam_id = ec.exam_id
        LEFT JOIN exam_student es ON e.exam_id = es.exam_id
        LEFT JOIN student_score ss ON e.exam_id = ss.exam_id
        WHERE e.teacher_id = #{teacherId}
        GROUP BY e.exam_id, e.exam_name, e.exam_type, e.exam_start_time, e.exam_end_time, e.exam_status, s.subject_name
        ORDER BY e.exam_start_time DESC
    </select>
</mapper> 